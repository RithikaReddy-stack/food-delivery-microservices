server.port=8083
spring.application.name=order-service

# DB
spring.datasource.url=jdbc:mysql://localhost:3306/food_orders
spring.datasource.username=root
spring.datasource.password=Rithikaanoop2710!

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# JWT Secret (same as other services)
jwt.secret=your_very_secure_secret_key_here_which_should_be_very_long

# resilience4j config for UserService
resilience4j.circuitbreaker.instances.userService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.userService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.userService.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.userService.waitDurationInOpenState=5000

# resilience4j config for RestaurantService
resilience4j.circuitbreaker.instances.restaurantService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.restaurantService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.restaurantService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.restaurantService.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.restaurantService.waitDurationInOpenState=5000

# Kafka Producer Settings
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
